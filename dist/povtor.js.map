{"version":3,"file":"povtor.js","sources":["../src/index.ts"],"sourcesContent":["export type RetryAction = (...args: unknown[]) => Promise<unknown> | unknown;\n\nexport type RetryTest = (value: unknown) => boolean;\n\nexport interface RetrySettings {\n    /** A function that should be called. */\n    action: RetryAction;\n    actionContext?: unknown;\n    actionParams?: unknown[];\n    delay?: number;\n    retryAttempts?: number[];\n    retryQty?: number;\n    retryTimeout?: number;\n    retryOnError?: boolean | RetryTest;\n    retryTest?: boolean | RetryTest;\n}\n\nexport interface WithPromiseField {\n    promise: Promise<unknown>;\n}\n\nexport interface RetryResult extends WithPromiseField {\n    attempt: number;\n    error: unknown;\n    stop: () => Promise<unknown>;\n    stopped: boolean;\n    value: unknown;\n    valueWait: boolean;\n    wait: boolean;\n}\n\nexport function retry(settings: RetrySettings): RetryResult {\n    let actionResult, resultReject, resultResolve, timeoutId;\n    // eslint-disable-next-line func-names, prefer-arrow-callback\n    const resultPromise = new Promise(function(resolve, reject) {\n        resultResolve = resolve;\n        resultReject = reject;\n    });\n\n    const { retryTimeout } = settings;\n    let index = 0;\n    let stopped = false;\n\n    let attempts: number;\n    let { retryAttempts } = settings;\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, @typescript-eslint/prefer-optional-chain\n    if (retryAttempts && retryAttempts.length) {\n        attempts = retryAttempts.length + 1;\n    }\n    else {\n        retryAttempts = null;\n        const { retryQty } = settings;\n        if (typeof retryQty === 'number' && retryQty >= 0) {\n            attempts = retryQty + 1;\n        }\n        else {\n            attempts = -1;\n        }\n    }\n\n    function stopRetry(): Promise<unknown> {\n        if (! stopped) {\n            /* eslint-disable @typescript-eslint/no-use-before-define */\n            if (timeoutId) {\n                clearTimeout(timeoutId);\n                retryResult.wait = false;\n            }\n            stopped = retryResult.stopped = true;\n            if (! retryResult.valueWait) {\n                resultResolve(retryResult.value);\n            }\n            /* eslint-enable @typescript-eslint/no-use-before-define */\n        }\n\n        return resultPromise;\n    }\n\n    const retryResult: RetryResult = {\n        attempt: index,\n        error: actionResult,\n        promise: resultPromise,\n        stop: stopRetry,\n        stopped: false,\n        value: actionResult,\n        valueWait: false,\n        wait: false\n    };\n\n    function retryAction(): void {\n        retryResult.attempt = ++index;\n        retryResult.wait = false;\n        retryResult.valueWait = true;\n        try {\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n            actionResult = settings.action.apply(settings.actionContext || null, settings.actionParams || []);\n            if (actionResult && typeof actionResult === 'object' && typeof actionResult.then === 'function') {\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                actionResult.then(onActionEnd, onActionError);\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                onActionEnd(actionResult);\n            }\n        }\n        catch (e) {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            onActionError(e);\n        }\n    }\n\n    function repeat(): void {\n        let timeout;\n        if (index) {\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n            timeout = retryAttempts\n                ? retryAttempts.shift()\n                : retryTimeout;\n        }\n        else {\n            timeout = settings.delay;\n        }\n        if (attempts > 0) {\n            attempts--;\n        }\n        if (typeof timeout !== 'number' || timeout < 0) {\n            retryAction();\n        }\n        else {\n            retryResult.wait = true;\n            timeoutId = setTimeout(retryAction, timeout);\n        }\n    }\n\n    function onActionEnd(value: unknown): void {\n        retryResult.value = value;\n        retryResult.valueWait = false;\n        let retryTest: unknown;\n        if (! stopped) {\n            retryTest = settings.retryTest;\n            if (! attempts) {\n                retryTest = false;\n            }\n            else if (typeof retryTest === 'function') {\n                retryTest = retryTest(value);\n            }\n        }\n        if (retryTest) {\n            repeat();\n        }\n        else {\n            resultResolve(value);\n        }\n    }\n\n    function onActionError(reason: unknown): void {\n        retryResult.error = reason;\n        retryResult.valueWait = false;\n        let { retryOnError } = settings;\n        if (stopped || ! attempts) {\n            retryOnError = false;\n        }\n        else if (typeof retryOnError === 'function') {\n            retryOnError = retryOnError(reason);\n        }\n        if (retryOnError) {\n            repeat();\n        }\n        else {\n            resultReject(reason);\n        }\n    }\n\n    repeat();\n\n    return retryResult;\n}\n\nexport function getPromiseField(obj: WithPromiseField): Promise<unknown> {\n    return obj.promise;\n}\n"],"names":["retry","settings","actionResult","resultReject","resultResolve","timeoutId","resultPromise","Promise","resolve","reject","retryTimeout","index","stopped","attempts","retryAttempts","length","retryQty","stopRetry","clearTimeout","retryResult","wait","valueWait","value","attempt","error","promise","stop","retryAction","action","apply","actionContext","actionParams","then","onActionEnd","onActionError","e","repeat","timeout","shift","delay","setTimeout","retryTest","reason","retryOnError","getPromiseField","obj"],"mappings":";;SA+BgBA,MAAMC;MACdC,YAAJ,EAAkBC,YAAlB,EAAgCC,aAAhC,EAA+CC,SAA/C;MAEMC,aAAa,GAAG,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB;IAC9BL,aAAa,GAAGI,OAAhB;IACAL,YAAY,GAAGM,MAAf;GAFkB,CAAtB;EAKQC;MACJC,KAAK,GAAG,CAAZ;MACIC,OAAO,GAAG,KAAd;MAEIC,QAAJ;EACMC;;MAEFA,aAAa,IAAIA,aAAa,CAACC,MAAnC,EAA2C;IACvCF,QAAQ,GAAGC,aAAa,CAACC,MAAd,GAAuB,CAAlC;GADJ,MAGK;IACDD,aAAa,GAAG,IAAhB;IACQE;;QACJ,OAAOA,QAAP,KAAoB,QAApB,IAAgCA,QAAQ,IAAI,CAAhD,EAAmD;MAC/CH,QAAQ,GAAGG,QAAQ,GAAG,CAAtB;KADJ,MAGK;MACDH,QAAQ,GAAG,CAAC,CAAZ;;;;WAICI,SAAT;QACQ,CAAEL,OAAN,EAAe;UAEPP,SAAJ,EAAe;QACXa,YAAY,CAACb,SAAD,CAAZ;QACAc,WAAW,CAACC,IAAZ,GAAmB,KAAnB;;;MAEJR,OAAO,GAAGO,WAAW,CAACP,OAAZ,GAAsB,IAAhC;;UACI,CAAEO,WAAW,CAACE,SAAlB,EAA6B;QACzBjB,aAAa,CAACe,WAAW,CAACG,KAAb,CAAb;;;;WAKDhB,aAAP;;;MAGEa,WAAW,GAAgB;IAC7BI,OAAO,EAAEZ,KADoB;IAE7Ba,KAAK,EAAEtB,YAFsB;IAG7BuB,OAAO,EAAEnB,aAHoB;IAI7BoB,IAAI,EAAET,SAJuB;IAK7BL,OAAO,EAAE,KALoB;IAM7BU,KAAK,EAAEpB,YANsB;IAO7BmB,SAAS,EAAE,KAPkB;IAQ7BD,IAAI,EAAE;GARV;;WAWSO,WAAT;IACIR,WAAW,CAACI,OAAZ,GAAsB,EAAEZ,KAAxB;IACAQ,WAAW,CAACC,IAAZ,GAAmB,KAAnB;IACAD,WAAW,CAACE,SAAZ,GAAwB,IAAxB;;QACI;MAEAnB,YAAY,GAAGD,QAAQ,CAAC2B,MAAT,CAAgBC,KAAhB,CAAsB5B,QAAQ,CAAC6B,aAAT,IAA0B,IAAhD,EAAsD7B,QAAQ,CAAC8B,YAAT,IAAyB,EAA/E,CAAf;;UACI7B,YAAY,IAAI,OAAOA,YAAP,KAAwB,QAAxC,IAAoD,OAAOA,YAAY,CAAC8B,IAApB,KAA6B,UAArF,EAAiG;QAE7F9B,YAAY,CAAC8B,IAAb,CAAkBC,WAAlB,EAA+BC,aAA/B;OAFJ,MAIK;QAEDD,WAAW,CAAC/B,YAAD,CAAX;;KATR,CAYA,OAAOiC,CAAP,EAAU;MAEND,aAAa,CAACC,CAAD,CAAb;;;;WAICC,MAAT;QACQC,OAAJ;;QACI1B,KAAJ,EAAW;MAEP0B,OAAO,GAAGvB,aAAa,GACjBA,aAAa,CAACwB,KAAd,EADiB,GAEjB5B,YAFN;KAFJ,MAMK;MACD2B,OAAO,GAAGpC,QAAQ,CAACsC,KAAnB;;;QAEA1B,QAAQ,GAAG,CAAf,EAAkB;MACdA,QAAQ;;;QAER,OAAOwB,OAAP,KAAmB,QAAnB,IAA+BA,OAAO,GAAG,CAA7C,EAAgD;MAC5CV,WAAW;KADf,MAGK;MACDR,WAAW,CAACC,IAAZ,GAAmB,IAAnB;MACAf,SAAS,GAAGmC,UAAU,CAACb,WAAD,EAAcU,OAAd,CAAtB;;;;WAICJ,WAAT,CAAqBX,KAArB;IACIH,WAAW,CAACG,KAAZ,GAAoBA,KAApB;IACAH,WAAW,CAACE,SAAZ,GAAwB,KAAxB;QACIoB,SAAJ;;QACI,CAAE7B,OAAN,EAAe;MACX6B,SAAS,GAAGxC,QAAQ,CAACwC,SAArB;;UACI,CAAE5B,QAAN,EAAgB;QACZ4B,SAAS,GAAG,KAAZ;OADJ,MAGK,IAAI,OAAOA,SAAP,KAAqB,UAAzB,EAAqC;QACtCA,SAAS,GAAGA,SAAS,CAACnB,KAAD,CAArB;;;;QAGJmB,SAAJ,EAAe;MACXL,MAAM;KADV,MAGK;MACDhC,aAAa,CAACkB,KAAD,CAAb;;;;WAICY,aAAT,CAAuBQ,MAAvB;IACIvB,WAAW,CAACK,KAAZ,GAAoBkB,MAApB;IACAvB,WAAW,CAACE,SAAZ,GAAwB,KAAxB;IACMsB;;QACF/B,OAAO,IAAI,CAAEC,QAAjB,EAA2B;MACvB8B,YAAY,GAAG,KAAf;KADJ,MAGK,IAAI,OAAOA,YAAP,KAAwB,UAA5B,EAAwC;MACzCA,YAAY,GAAGA,YAAY,CAACD,MAAD,CAA3B;;;QAEAC,YAAJ,EAAkB;MACdP,MAAM;KADV,MAGK;MACDjC,YAAY,CAACuC,MAAD,CAAZ;;;;EAIRN,MAAM;SAECjB,WAAP;;AAGJ,SAAgByB,gBAAgBC;SACrBA,GAAG,CAACpB,OAAX;;;;;;"}